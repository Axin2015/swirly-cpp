INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/include")
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/src")
INCLUDE_DIRECTORIES("${LIBUUID_INCLUDE_DIRS}")
INCLUDE_DIRECTORIES("${ZEROMQ_INCLUDE_DIRS}")

IF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
  SET(CMAKE_C_FLAGS "-std=c11 -Wall -Werror -Werror -Wno-unused-variable -Wno-maybe-uninitialized -fstrict-aliasing -fvisibility=hidden")
ELSEIF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
  SET(CMAKE_C_FLAGS "-std=c11 -Wall -Werror -Werror -Wno-unused-const-variable -fstrict-aliasing -fvisibility=hidden")
ENDIF()

IF(RAGEL)
  ADD_CUSTOM_COMMAND(
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/rest.rl
    COMMAND ${RAGEL} ${CMAKE_CURRENT_SOURCE_DIR}/rest.rl -o ${CMAKE_CURRENT_SOURCE_DIR}/rest.c
    OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/rest.c
    )
ENDIF(RAGEL)

FILE(GLOB elm_SOURCES "*.c")

ADD_LIBRARY(elm_shared SHARED ${elm_SOURCES})
SET_TARGET_PROPERTIES(elm_shared PROPERTIES OUTPUT_NAME sc_elm)
TARGET_LINK_LIBRARIES(elm_shared ash_shared ${LIBUUID_LIBRARIES} ${ZEROMQ_LIBRARIES} m)

ADD_LIBRARY(elm_static STATIC ${elm_SOURCES})
SET_TARGET_PROPERTIES(elm_static PROPERTIES OUTPUT_NAME sc_elm)
TARGET_LINK_LIBRARIES(elm_static ash_static ${LIBUUID_LIBRARIES} ${ZEROMQ_LIBRARIES} m)

ADD_LIBRARY(elm_pic STATIC ${elm_SOURCES})
SET_TARGET_PROPERTIES(elm_pic PROPERTIES OUTPUT_NAME sc_elm_pic)
SET_TARGET_PROPERTIES(elm_pic PROPERTIES COMPILE_FLAGS "${CMAKE_SHARED_LIBRARY_C_FLAGS}")
TARGET_LINK_LIBRARIES(elm_pic ash_pic ${LIBUUID_LIBRARIES} ${ZEROMQ_LIBRARIES} m)

INSTALL(TARGETS elm_shared DESTINATION lib)
INSTALL(TARGETS elm_static DESTINATION lib)
