CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(doobry)

SET(CMAKE_VERBOSE_MAKEFILE 1)

IF(NOT CMAKE_BUILD_TYPE)
  #SET(CMAKE_BUILD_TYPE DEBUG)
  SET(CMAKE_BUILD_TYPE RELEASE)
  #SET(CMAKE_BUILD_TYPE RELWITHDEBINFO)
  #SET(CMAKE_BUILD_TYPE MINSIZEREL)
ENDIF()

STRING(TOUPPER "${CMAKE_BUILD_TYPE}" CMAKE_BUILD_TYPE)

IF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
  SET(CMAKE_C_FLAGS "-std=c11 -Wall -Werror -fstrict-aliasing -fvisibility=hidden")
  SET(CMAKE_CXX_FLAGS "-std=c++11 -Wall -Werror -fstrict-aliasing -fvisibility=hidden")
ELSEIF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
  SET(CMAKE_C_FLAGS "-std=c11 -Wall -Werror -fstrict-aliasing -fvisibility=hidden")
  SET(CMAKE_CXX_FLAGS "-std=c++11 -stdlib=libc++ -Wall -Werror -fstrict-aliasing -fvisibility=hidden")
ENDIF()
SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS}")

ADD_DEFINITIONS(-D_GNU_SOURCE)
IF(CMAKE_BUILD_TYPE STREQUAL "DEBUG")
  ADD_DEFINITIONS(-DDBR_DEBUG_LEVEL=1 -DDBR_DEBUG_ALLOC)
ENDIF()

SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)

FILE(MAKE_DIRECTORY ${EXECUTABLE_OUTPUT_PATH})
FILE(MAKE_DIRECTORY ${LIBRARY_OUTPUT_PATH})
FILE(MAKE_DIRECTORY ${PROJECT_BINARY_DIR}/share/doc)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${PROJECT_SOURCE_DIR}/etc)

FIND_PROGRAM(DOT dot)
FIND_PROGRAM(RAGEL ragel)

FIND_PACKAGE(Doxygen) # Optional.
FIND_PACKAGE(LibUuid REQUIRED)
FIND_PACKAGE(ZeroMQ REQUIRED)

IF(DOXYGEN_FOUND)
  CONFIGURE_FILE(${PROJECT_SOURCE_DIR}/Doxyfile.in
    ${PROJECT_BINARY_DIR}/Doxyfile)

  ADD_CUSTOM_TARGET(doc
    WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}
    COMMAND ${CMAKE_COMMAND} -E make_directory ${PROJECT_BINARY_DIR}/share
    COMMAND ${DOXYGEN_EXECUTABLE} ${PROJECT_BINARY_DIR}/Doxyfile
    SOURCES ${PROJECT_BINARY_DIR}/Doxyfile)

  ADD_CUSTOM_COMMAND(TARGET doc POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy ${PROJECT_SOURCE_DIR}/CNAME
            ${PROJECT_BINARY_DIR}/share/doc/html/
    COMMAND ${CMAKE_COMMAND} -E copy ${PROJECT_SOURCE_DIR}/image/favicon.ico
            ${PROJECT_BINARY_DIR}/share/doc/html/)
  ADD_DEPENDENCIES(doc image)

  INSTALL(DIRECTORY ${PROJECT_BINARY_DIR}/share/doc/ DESTINATION share)
ENDIF()

ENABLE_TESTING()

ADD_SUBDIRECTORY(etc)
ADD_SUBDIRECTORY(image)
ADD_SUBDIRECTORY(include)
ADD_SUBDIRECTORY(src)

ADD_SUBDIRECTORY(example)
ADD_SUBDIRECTORY(test)
